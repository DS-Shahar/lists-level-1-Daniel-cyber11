

import java.util.Arrays;
import java.util.List;
import java.util.Random;

public class reshima {
	
	public static void main(String[] args) {		
		Node r=list2(10,5,20);
		System.out.println(r);
		List<Integer> list2 = Arrays.asList(1, 2, 3,3, 2, 4, 2, 5, 3, 3, 3);
		int c=in(3,list2);
		System.out.println("apears "+c+" times");
		Node<Integer> node3 = new Node<>(3, null);
        Node<Integer> node2 = new Node<>(2, node3);
        Node<Integer> node1 = new Node<>(1, node2);
        list4(node1);
        Node <Integer>b=new Node<>(2);
		Node <Integer> f=new Node<>(5);
		Node <Integer> s=new Node<>(3);
		b.setNext(f);
		f.setNext(s);
		exe2_1(b);
		exe2_2(b);
		exe2_3(b);
		
		System.out.println(exe3());
		exe4(b);
		System.out.println(exe5(6,b));
	}
		
	
	
	
	
//רשימה עם 20 מספרים אקראיים בתחום נתון x,y


	public static Node<Integer>list2(int x, int y, int n){
		Node<Integer> RandomList = new Node<Integer>(-1);
		Node<Integer> p = RandomList;
		Node<Integer> z;
		Random random=new Random();
		for(int i=0;i<n;i++) {
			z = new Node<Integer>(random.nextInt(x-y+1)+y);
			p.setNext(z);
		    p = p.getNext();
		}
		return RandomList.getNext();
	
		}





	// כמה פעמים מופיע מספר נתון x ברשימה נתונה h
   public static int in(int x, List<Integer> h){
	   int count=0;
	   for(int i=0;i<h.size();i++) {
		   if(h.get(i)==x) {
			   count++;
		   }
	   }
	   return count;
   }
   
   
   
   //(א) מטלה "Lists Level 1"
   
   //1
	public static Node<Integer>list3(int [] arr){
			Node<Integer> h = new Node<Integer>(-1);
			Node<Integer> p = h;
			Node<Integer> x;
			for (int i = 0; i < arr.length; i++) {
				x = new Node<Integer>(arr[i]);
				p.setNext(x);
				p = p.getNext();
			}
			return h.getNext();
		}
	
	
	//2
	
		
	public static void list4(Node<Integer> a){
		while(a!=null) {
			System.out.println(a.getValue());
			System.out.println();
			a=a.getNext();
		}
	}
	
	
	public static void Riclist4(Node<Integer> a){
		Node<Integer> h=a;
		if(h==null) {
			return;
		}
		System.out.println(h.getValue());
		System.out.println();
		a=a.getNext();
		
		return Riclist4(a.getNext());
	}
	
	
	public static void exe2_1(Node<Integer>list) {
		Node<Integer>curr=list;
		while(curr!=null) {
			System.out.println(curr.getValue());
			curr=curr.getNext();
		}
	}
	public static void exe2_2(Node<Integer>list) {
		Node<Integer>curr=list;
		if(curr==null) {
			return;
		}
		System.out.println(curr.getValue());
		exe2_2(curr.getNext());
	}
	
	public static void exe2_3(Node<Integer>list) {
		if(list==null) {
			System.out.println(list.getValue());
			return;
		}
		exe2_2(list.getNext());
		System.out.println(list.getValue());
	}
	
	public static Node exe3() {
		int ans;
		System.out.println("enter a number");
		ans=reader.nextInt();
		Node<Integer>first=new Node<>(-1);
		Node <Integer>curr=first;
		Node<Integer>next;
		
		while(ans>-1) {
			next=new Node<>(ans);
			curr.setNext(next);
			curr=next;
			System.out.println("enter a number");
			ans=reader.nextInt();	
		}
		return first.getNext();
	}
	
	
	public static void exe4(Node<Integer>list) {
		Node<Integer>a=list;
		
		while(a!=null) {
			if(a.getValue()%2==0) {
				System.out.println(a.getValue());
			}
			a=a.getNext();
		}
	}
	
	public static boolean exe5(int n,Node<Integer>list) {
		Node<Integer>a=list;
		while(a!=null) {
			if(a.getValue()==n) {
				return true;
			}
			a=a.getNext();
		}
		return false;
	}
	
		
}
	
	


   
		
		
	

   
   
   

